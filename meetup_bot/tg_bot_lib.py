from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from email_validate import validate

def get_menu_keyboard(is_speaker):
    keyboard = [
        [InlineKeyboardButton('üìã  –ü—Ä–æ–≥—Ä–∞–º–º–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', callback_data='program')],
        [InlineKeyboardButton('üó£  –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ø–∏–∫–µ—Ä—É', callback_data='ask_speaker')],
        [InlineKeyboardButton('ü§ù  –ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è', callback_data='acquaint')],
        [InlineKeyboardButton('üí∏  –î–æ–Ω–∞—Ç', callback_data='donate')],
    ]
    if is_speaker:
        keyboard.append(
            [InlineKeyboardButton('–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã', callback_data='respond_to_questions')],
        )
    reply_markup = InlineKeyboardMarkup(keyboard)
    return reply_markup


def get_accept_questionnarie_keyboard():
    keyboard = [
        [InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='accept')],
        [InlineKeyboardButton('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='back_to_menu')],  
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    return reply_markup


def check_email(update, context):
    is_valid_email = validate(
        update.message.text,
        check_blacklist=False,
        check_dns=False,
        check_smtp=False
    )
    if not is_valid_email:
        context.bot.send_message(
            chat_id=update.effective_chat.id,
            text='–ù–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã–π email. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',
        )
    return is_valid_email